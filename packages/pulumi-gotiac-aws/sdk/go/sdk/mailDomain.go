// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sdk

import (
	"context"
	"reflect"

	"github.com/gothub-team/got/packages/pulumi-gotiac-aws/sdk/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MailDomain struct {
	pulumi.ResourceState

	// A random string to ensure uniqueness.
	Random pulumi.StringOutput `pulumi:"random"`
}

// NewMailDomain registers a new resource with the given unique name, arguments, and options.
func NewMailDomain(ctx *pulumi.Context,
	name string, args *MailDomainArgs, opts ...pulumi.ResourceOption) (*MailDomain, error) {
	if args == nil {
		args = &MailDomainArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MailDomain
	err := ctx.RegisterRemoteComponentResource("gotiac:index:MailDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type mailDomainArgs struct {
}

// The set of arguments for constructing a MailDomain resource.
type MailDomainArgs struct {
}

func (MailDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mailDomainArgs)(nil)).Elem()
}

type MailDomainInput interface {
	pulumi.Input

	ToMailDomainOutput() MailDomainOutput
	ToMailDomainOutputWithContext(ctx context.Context) MailDomainOutput
}

func (*MailDomain) ElementType() reflect.Type {
	return reflect.TypeOf((**MailDomain)(nil)).Elem()
}

func (i *MailDomain) ToMailDomainOutput() MailDomainOutput {
	return i.ToMailDomainOutputWithContext(context.Background())
}

func (i *MailDomain) ToMailDomainOutputWithContext(ctx context.Context) MailDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MailDomainOutput)
}

// MailDomainArrayInput is an input type that accepts MailDomainArray and MailDomainArrayOutput values.
// You can construct a concrete instance of `MailDomainArrayInput` via:
//
//	MailDomainArray{ MailDomainArgs{...} }
type MailDomainArrayInput interface {
	pulumi.Input

	ToMailDomainArrayOutput() MailDomainArrayOutput
	ToMailDomainArrayOutputWithContext(context.Context) MailDomainArrayOutput
}

type MailDomainArray []MailDomainInput

func (MailDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MailDomain)(nil)).Elem()
}

func (i MailDomainArray) ToMailDomainArrayOutput() MailDomainArrayOutput {
	return i.ToMailDomainArrayOutputWithContext(context.Background())
}

func (i MailDomainArray) ToMailDomainArrayOutputWithContext(ctx context.Context) MailDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MailDomainArrayOutput)
}

// MailDomainMapInput is an input type that accepts MailDomainMap and MailDomainMapOutput values.
// You can construct a concrete instance of `MailDomainMapInput` via:
//
//	MailDomainMap{ "key": MailDomainArgs{...} }
type MailDomainMapInput interface {
	pulumi.Input

	ToMailDomainMapOutput() MailDomainMapOutput
	ToMailDomainMapOutputWithContext(context.Context) MailDomainMapOutput
}

type MailDomainMap map[string]MailDomainInput

func (MailDomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MailDomain)(nil)).Elem()
}

func (i MailDomainMap) ToMailDomainMapOutput() MailDomainMapOutput {
	return i.ToMailDomainMapOutputWithContext(context.Background())
}

func (i MailDomainMap) ToMailDomainMapOutputWithContext(ctx context.Context) MailDomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MailDomainMapOutput)
}

type MailDomainOutput struct{ *pulumi.OutputState }

func (MailDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MailDomain)(nil)).Elem()
}

func (o MailDomainOutput) ToMailDomainOutput() MailDomainOutput {
	return o
}

func (o MailDomainOutput) ToMailDomainOutputWithContext(ctx context.Context) MailDomainOutput {
	return o
}

// A random string to ensure uniqueness.
func (o MailDomainOutput) Random() pulumi.StringOutput {
	return o.ApplyT(func(v *MailDomain) pulumi.StringOutput { return v.Random }).(pulumi.StringOutput)
}

type MailDomainArrayOutput struct{ *pulumi.OutputState }

func (MailDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MailDomain)(nil)).Elem()
}

func (o MailDomainArrayOutput) ToMailDomainArrayOutput() MailDomainArrayOutput {
	return o
}

func (o MailDomainArrayOutput) ToMailDomainArrayOutputWithContext(ctx context.Context) MailDomainArrayOutput {
	return o
}

func (o MailDomainArrayOutput) Index(i pulumi.IntInput) MailDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MailDomain {
		return vs[0].([]*MailDomain)[vs[1].(int)]
	}).(MailDomainOutput)
}

type MailDomainMapOutput struct{ *pulumi.OutputState }

func (MailDomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MailDomain)(nil)).Elem()
}

func (o MailDomainMapOutput) ToMailDomainMapOutput() MailDomainMapOutput {
	return o
}

func (o MailDomainMapOutput) ToMailDomainMapOutputWithContext(ctx context.Context) MailDomainMapOutput {
	return o
}

func (o MailDomainMapOutput) MapIndex(k pulumi.StringInput) MailDomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MailDomain {
		return vs[0].(map[string]*MailDomain)[vs[1].(string)]
	}).(MailDomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MailDomainInput)(nil)).Elem(), &MailDomain{})
	pulumi.RegisterInputType(reflect.TypeOf((*MailDomainArrayInput)(nil)).Elem(), MailDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MailDomainMapInput)(nil)).Elem(), MailDomainMap{})
	pulumi.RegisterOutputType(MailDomainOutput{})
	pulumi.RegisterOutputType(MailDomainArrayOutput{})
	pulumi.RegisterOutputType(MailDomainMapOutput{})
}

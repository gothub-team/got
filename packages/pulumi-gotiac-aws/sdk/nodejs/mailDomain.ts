// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MailDomain extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'gotiac:index:MailDomain';

    /**
     * Returns true if the given object is an instance of MailDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MailDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MailDomain.__pulumiType;
    }

    /**
     * The ID of the organization that can be used to create mailboxes
     */
    public /*out*/ readonly organizationId!: pulumi.Output<string>;

    /**
     * Create a MailDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MailDomainArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.region === undefined) && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["organizationId"] = undefined /*out*/;
        } else {
            resourceInputs["organizationId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MailDomain.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a MailDomain resource.
 */
export interface MailDomainArgs {
    /**
     * The domain to be used for the mailboxes
     */
    domain: pulumi.Input<string>;
    /**
     * The aws region to create the domain in.
     */
    region: pulumi.Input<string>;
}

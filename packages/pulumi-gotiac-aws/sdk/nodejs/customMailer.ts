// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from '@pulumi/pulumi';
import * as utilities from './utilities';

export class CustomMailer extends pulumi.CustomResource {
    /**
     * Get an existing CustomMailer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CustomMailer {
        return new CustomMailer(name, undefined as any, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gotiac:index:CustomMailer';

    /**
     * Returns true if the given object is an instance of CustomMailer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomMailer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomMailer.__pulumiType;
    }

    /**
     * The path to the .zip for the lambda code.
     */
    public readonly /*out*/ codePath!: pulumi.Output<string>;
    /**
     * The ARN of the pull lambda function.
     */
    public readonly /*out*/ invokePullPolicyArn!: pulumi.Output<string>;
    /**
     * Notifications email account in the format of `$ echo "sender|host|user|password|port|secureFlag" | base64`.
     */
    public readonly /*out*/ notificationsEmailAccount!: pulumi.Output<string>;
    /**
     * The name of the pull lambda function that is used to pull message templates.
     */
    public readonly /*out*/ pullLambdaName!: pulumi.Output<string>;
    /**
     * The lambda runtime.
     */
    public readonly /*out*/ runtime!: pulumi.Output<string>;
    /**
     * The ID of the cognito user pool that should be updated with the custom mailer.
     */
    public readonly /*out*/ userPoolId!: pulumi.Output<string>;

    /**
     * Create a CustomMailer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CustomMailerArgs, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            resourceInputs['codePath'] = undefined /*out*/;
            resourceInputs['invokePullPolicyArn'] = undefined /*out*/;
            resourceInputs['notificationsEmailAccount'] = undefined /*out*/;
            resourceInputs['pullLambdaName'] = undefined /*out*/;
            resourceInputs['runtime'] = undefined /*out*/;
            resourceInputs['userPoolId'] = undefined /*out*/;
        } else {
            resourceInputs['codePath'] = undefined /*out*/;
            resourceInputs['invokePullPolicyArn'] = undefined /*out*/;
            resourceInputs['notificationsEmailAccount'] = undefined /*out*/;
            resourceInputs['pullLambdaName'] = undefined /*out*/;
            resourceInputs['runtime'] = undefined /*out*/;
            resourceInputs['userPoolId'] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomMailer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a CustomMailer resource.
 */
export interface CustomMailerArgs {}

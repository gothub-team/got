// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from '@pulumi/pulumi';
import * as utilities from './utilities';

export class TestAdminUser extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'gotiac:index:TestAdminUser';

    /**
     * Returns true if the given object is an instance of TestAdminUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TestAdminUser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TestAdminUser.__pulumiType;
    }

    /**
     * The temporary password of the test admin user. Make sure to destroy the test admin user after each test run.
     */
    public readonly /*out*/ password!: pulumi.Output<string>;

    /**
     * Create a TestAdminUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TestAdminUserArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.email === undefined) && !opts.urn) {
                throw new Error("Missing required property 'email'");
            }
            if ((!args || args.userPoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'userPoolId'");
            }
            resourceInputs['email'] = args ? args.email : undefined;
            resourceInputs['userPoolId'] = args ? args.userPoolId : undefined;
            resourceInputs['password'] = undefined /*out*/;
        } else {
            resourceInputs['password'] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TestAdminUser.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a TestAdminUser resource.
 */
export interface TestAdminUserArgs {
    /**
     * The email of the test admin user. Throws an error if the user already exists.
     */
    email: pulumi.Input<string>;
    /**
     * The ID of the user pool where the test admin user is created. UserPool must exist.
     */
    userPoolId: pulumi.Input<string>;
}

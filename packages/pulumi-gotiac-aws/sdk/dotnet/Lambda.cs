// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gotiac
{
    [GotiacResourceType("gotiac:index:Lambda")]
    public partial class Lambda : global::Pulumi.ComponentResource
    {
        /// <summary>
        /// The ARN of the Lambda function.
        /// </summary>
        [Output("arn")]
        public Output<string> Arn { get; private set; } = null!;

        /// <summary>
        /// The Name of the Lambda function.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a Lambda resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Lambda(string name, LambdaArgs args, ComponentResourceOptions? options = null)
            : base("gotiac:index:Lambda", name, args ?? new LambdaArgs(), MakeResourceOptions(options, ""), remote: true)
        {
        }

        private static ComponentResourceOptions MakeResourceOptions(ComponentResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ComponentResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = ComponentResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class LambdaArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The path to a .zip file containing your deployment package.
        /// </summary>
        [Input("codePath", required: true)]
        public Input<string> CodePath { get; set; } = null!;

        /// <summary>
        /// The path to the handler in the deployment package.
        /// </summary>
        [Input("handler", required: true)]
        public Input<string> Handler { get; set; } = null!;

        /// <summary>
        /// The amount of memory in MB your Lambda Function can use at runtime.
        /// </summary>
        [Input("memorySize")]
        public Input<double>? MemorySize { get; set; }

        [Input("policyArns", required: true)]
        private InputList<string>? _policyArns;

        /// <summary>
        /// The ARNs of the policies that are attached to the Lambda function.
        /// </summary>
        public InputList<string> PolicyArns
        {
            get => _policyArns ?? (_policyArns = new InputList<string>());
            set => _policyArns = value;
        }

        /// <summary>
        /// The runtime environment for the Lambda function.
        /// </summary>
        [Input("runtime", required: true)]
        public Input<string> Runtime { get; set; } = null!;

        public LambdaArgs()
        {
        }
        public static new LambdaArgs Empty => new LambdaArgs();
    }
}

# yaml-language-server: $schema=https://raw.githubusercontent.com/pulumi/pulumi/master/pkg/codegen/schema/pulumi.json
---
name: gotiac
pluginDownloadURL: github://api.github.com/gothub-team
resources:
    gotiac:index:MailDomain:
        isComponent: true
        inputProperties:
            domain:
                type: string
                description: The domain to be used for the mailboxes
            region:
                type: string
                description: The aws region to create the domain in.
        requiredInputs:
            - domain
            - region
        properties:
            organizationId:
                type: string
                description: The ID of the organization that can be used to create mailboxes
        required:
            - organizationId
    gotiac:index:FileHosting:
        isComponent: true
        inputProperties:
            domain:
                type: string
                description: The file hosting domain.
            bucketName:
                type: string
                description:
                    The name of an existing s3 Bucket to link as origin. If not provided, a new bucket will be created.
        requiredInputs:
            - domain
        properties:
            url:
                type: string
                description: The file hosting URL.
            privateKeyParameterName:
                type: string
                description: The parameter name for the private key.
            privateKeyId:
                type: string
                description: The ID the private key.
        required:
            - url
            - privateKeyParameterName
            - privateKeyId
    gotiac:index:TestUser:
        isComponent: true
        inputProperties:
            userPoolId:
                type: string
                description: The ID of the user pool where the test user is created. UserPool must exist.
            email:
                type: string
                description: The email of the test user. Throws an error if the user already exists.
        requiredInputs:
            - userPoolId
            - email
        properties:
            password:
                type: string
                description:
                    The temporary password of the test user. Make sure to destroy the test user after each test run.
        required:
            - password
    gotiac:index:Lambda:
        isComponent: true
        inputProperties:
            codePath:
                type: string
                description: The path to a .zip file containing your deployment package.
            handlerPath:
                type: string
                description: The path to the handler in the deployment package.
            memorySize:
                type: number
                description: The amount of memory in MB your Lambda Function can use at runtime.
            runtime:
                type: string
                description: The runtime environment for the Lambda function.
            environment:
                type: object
                description: The environment variables that are accessible from the function code during execution.
                items:
                    type: string
            policyArns:
                type: array
                items:
                    type: string
                description: The ARNs of the policies that are attached to the Lambda function.
        requiredInputs:
            - codePath
            - handlerPath
            - runtime
            - policyArns
        properties:
            name:
                type: string
                description: The Name of the Lambda function.
            arn:
                type: string
                description: The ARN of the Lambda function.
        required:
            - name
            - arn
    gotiac:index:Api:
        isComponent: true
        inputProperties:
            userPoolId:
                type: string
                description: ID of the user pool.
            codePath:
                type: string
                description: The path to the directory containing the deployment packages.
            runtime:
                type: string
                description: The runtime environment for the Lambda function.
            policyArns:
                type: array
                items:
                    type: string
                description: The ARNs of the policies that are attached to the Lambda function.
            bucketNodesName:
                type: string
                description: The Name of the existing bucket for node storage.
            bucketEdgesName:
                type: string
                description: The Name of the existing bucket for edge storage.
            bucketReverseEdgesName:
                type: string
                description: The Name of the existing bucket for reverse edge storage.
            bucketRightsReadName:
                type: string
                description: The Name of the existing bucket for read right storage.
            bucketRightsWriteName:
                type: string
                description: The Name of the existing bucket for write right storage.
            bucketRightsAdminName:
                type: string
                description: The Name of the existing bucket for admin right storage.
            bucketRightsOwnerName:
                type: string
                description: The Name of the existing bucket for owner right storage.
        requiredInputs:
            - userPoolId
            - codePath
            - runtime
        properties:
            endpoint:
                type: string
                description: The endpoint of the API.
            pullFunction:
                type: string
            pullEndpoint:
                type: string
            pushFunction:
                type: string
            pushEndpoint:
                type: string
            pullInvokePolicyArn:
                type: string
            pushInvokePolicyArn:
                type: string
        required:
            - endpoint
            - pullFunction
            - pullEndpoint
            - pushFunction
            - pushEndpoint
            - pullInvokePolicyArn
            - pushInvokePolicyArn
    gotiac:index:GraphStore:
        isComponent: true
        inputProperties:
            bucketNodesName:
                type: string
                description: The bucket to be used for node storage
            bucketEdgesName:
                type: string
                description: The bucket to be used for edge storage
            bucketReverseEdgesName:
                type: string
                description: The bucket to be used for reverse edge storage
            bucketRightsReadName:
                type: string
                description: The bucket to be used for read right storage
            bucketRightsWriteName:
                type: string
                description: The bucket to be used for write right storage
            bucketRightsAdminName:
                type: string
                description: The bucket to be used for admin right storage
            bucketRightsOwnerName:
                type: string
                description: The bucket to be used for owner right storage
        requiredInputs:
        properties:
            bucketNodesName:
                type: string
                description: The Name of the bucket for node storage.
            bucketEdgesName:
                type: string
                description: The Name of the bucket for edge storage.
            bucketReverseEdgesName:
                type: string
                description: The Name of the bucket for reverse edge storage.
            bucketRightsReadName:
                type: string
                description: The Name of the bucket for read right storage.
            bucketRightsWriteName:
                type: string
                description: The Name of the bucket for write right storage.
            bucketRightsAdminName:
                type: string
                description: The Name of the bucket for admin right storage.
            bucketRightsOwnerName:
                type: string
                description: The Name of the bucket for owner right storage.
            storageReadPolicyArn:
                type: string
                description: The ARN of the storage read policy.
            storageWritePolicyArn:
                type: string
                description: The ARN of the storage write policy.
        required:
            - bucketNodesName
            - bucketEdgesName
            - bucketReverseEdgesName
            - bucketRightsReadName
            - bucketRightsWriteName
            - bucketRightsAdminName
            - bucketRightsOwnerName
            - storageReadPolicyArn
            - storageWritePolicyArn
language:
    csharp:
        packageReferences:
            Pulumi: 3.*
            Pulumi.Aws: 4.*
    go:
        generateResourceContainerTypes: true
        importBasePath: github.com/gothub-team/got/packages/pulumi-gotiac-aws/sdk
    nodejs:
        packageName: '@gothub/pulumi-gotiac-aws'
        dependencies:
            '@pulumi/aws': '^6.0.0'
        devDependencies:
            typescript: '*'
            '@types/node': '*'
            '@gothub/typescript-util': 'workspace:*'
        trustedDependencies:
            - 'protobufjs'
    python:
        requires:
            pulumi: '>=3.0.0,<4.0.0'
            pulumi-aws: '>=4.0.0,<5.0.0'

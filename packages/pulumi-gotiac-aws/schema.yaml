# yaml-language-server: $schema=https://raw.githubusercontent.com/pulumi/pulumi/master/pkg/codegen/schema/pulumi.json
---
name: gotiac
pluginDownloadURL: github://api.github.com/gothub-team/got
resources:
    gotiac:index:MailDomain:
        isComponent: true
        inputProperties:
            domain:
                type: string
                description: The domain to be used for the mailboxes
            region:
                type: string
                description: The aws region to create the domain in.
        requiredInputs:
            - domain
            - region
        properties:
            organizationId:
                type: string
                description: The ID of the organization that can be used to create mailboxes
            imapServer:
                type: string
                description: The IMAP server host for the mail domain
        required:
            - organizationId
            - imapServer
    gotiac:index:MailUser:
        isComponent: true
        inputProperties:
            region:
                type: string
                description: The region to create the mail domain in
            displayName:
                type: string
                description: The display name for the new user.
            name:
                type: string
                description:
                    The name for the new user. WorkMail directory user names have a maximum length of 64. All others
                    have a maximum length of 20.
            emailPrefix:
                type: string
                description:
                    The email prefix for the new user. (prefix@domain.com). The default domain of the organization will
                    be appended automatically.
            enabled:
                type: boolean
                description: Whether the mailbox for the user is enabled.
            organizationId:
                type: string
                description:
                    The identifier of the organization for which the user is created. Either organizationId or domain
                    must be specified.
            domain:
                type: string
                description:
                    The mail domain of the organization for which the user is created. Either organizationId or domain
                    must be specified.
            firstName:
                type: string
                description: The first name of the new user.
            lastName:
                type: string
                description: The last name of the new user.
            # passwordSeed:
            #     type: string
            #     description:
            #         The password seed for the new user. Change will trigger a resource update with new password.
        requiredInputs:
            - region
            - displayName
            - name
            - emailPrefix
            - enabled
        properties:
            userId:
                type: string
                description: The ID of the organization that can be used to create mailboxes
            password:
                type: string
                description: The password of the new user.
        required:
            - userId
            - password
    gotiac:index:FileHosting:
        isComponent: true
        inputProperties:
            domain:
                type: string
                description: The file hosting domain.
            bucketName:
                type: string
                description:
                    The name of an existing s3 Bucket to link as origin. If not provided, a new bucket will be created.
        requiredInputs:
            - domain
        properties:
            url:
                type: string
                description: The file hosting URL.
            privateKeyParameterName:
                type: string
                description: The parameter name for the private key.
            privateKeyId:
                type: string
                description: The ID the private key.
        required:
            - url
            - privateKeyParameterName
            - privateKeyId
    gotiac:index:UserPool:
        isComponent: true
        properties:
            userPoolId:
                type: string
                description: The ID of the cognito user pool that was created.
        required:
            - userPoolId
    gotiac:index:TestUser:
        isComponent: true
        inputProperties:
            userPoolId:
                type: string
                description: The ID of the user pool where the test user is created. UserPool must exist.
            email:
                type: string
                description: The email of the test user. Throws an error if the user already exists.
        requiredInputs:
            - userPoolId
            - email
        properties:
            password:
                type: string
                description:
                    The temporary password of the test user. Make sure to destroy the test user after each test run.
        required:
            - password
    gotiac:index:Api:
        isComponent: true
        inputProperties:
            domainName:
                type: string
                description: Domain name of the got api.
            userPoolId:
                type: string
                description: ID of the user pool.
            codePath:
                type: string
                description: The path to the directory containing the deployment packages.
            runtime:
                type: string
                description: The runtime environment for the Lambda function.
            bucketNodesName:
                type: string
                description: The Name of the existing bucket for node storage.
            bucketEdgesName:
                type: string
                description: The Name of the existing bucket for edge storage.
            forceStoreDestroy:
                type: boolean
                description: If the store buckets should be destroyed on stack removal even if they are not empty.
            bucketReverseEdgesName:
                type: string
                description: The Name of the existing bucket for reverse edge storage.
            bucketRightsReadName:
                type: string
                description: The Name of the existing bucket for read right storage.
            bucketRightsWriteName:
                type: string
                description: The Name of the existing bucket for write right storage.
            bucketRightsAdminName:
                type: string
                description: The Name of the existing bucket for admin right storage.
            bucketRightsOwnerName:
                type: string
                description: The Name of the existing bucket for owner right storage.
            inviteUserValidationView:
                type: string
                description: got view that covers nodes for a user needs read rights in order to invite other users.
        requiredInputs:
            - domainName
            - userPoolId
            - codePath
            - runtime
        properties:
            endpoint:
                type: string
                description: The endpoint of the API.
            pullEndpoint:
                type: string
            pushEndpoint:
                type: string
            pullInvokePolicyArn:
                type: string
            pushInvokePolicyArn:
                type: string
            authLoginInitEndpoint:
                type: string
            authLoginVerifyEndpoint:
                type: string
            authLoginRefreshEndpoint:
                type: string
            authRegisterInitEndpoint:
                type: string
            authRegisterVerifyEndpoint:
                type: string
            authRegisterVerifyResendEndpoint:
                type: string
            authResetPasswordInitEndpoint:
                type: string
            authResetPasswordVerifyEndpoint:
                type: string
            authInviteUserEndpoint:
                type: string
            openApiEndpoint:
                type: string
        required:
            - endpoint
            - pullEndpoint
            - pushEndpoint
            - pullInvokePolicyArn
            - pushInvokePolicyArn
            - authLoginInitEndpoint
            - authLoginVerifyEndpoint
            - authLoginRefreshEndpoint
            - authRegisterInitEndpoint
            - authRegisterVerifyEndpoint
            - authRegisterVerifyResendEndpoint
            - authResetPasswordInitEndpoint
            - authResetPasswordVerifyEndpoint
            - authInviteUserEndpoint
            - openApiEndpoint
    gotiac:index:GraphStore:
        isComponent: true
        inputProperties:
            bucketNodesName:
                type: string
                description: The bucket to be used for node storage
            bucketEdgesName:
                type: string
                description: The bucket to be used for edge storage
            bucketReverseEdgesName:
                type: string
                description: The bucket to be used for reverse edge storage
            bucketRightsReadName:
                type: string
                description: The bucket to be used for read right storage
            bucketRightsWriteName:
                type: string
                description: The bucket to be used for write right storage
            bucketRightsAdminName:
                type: string
                description: The bucket to be used for admin right storage
            bucketRightsOwnerName:
                type: string
                description: The bucket to be used for owner right storage
            forceDestroy:
                type: boolean
                description: If the buckets should be destroyed on stack removal even if they are not empty.
        requiredInputs:
        properties:
            bucketNodesName:
                type: string
                description: The Name of the bucket for node storage.
            bucketEdgesName:
                type: string
                description: The Name of the bucket for edge storage.
            bucketReverseEdgesName:
                type: string
                description: The Name of the bucket for reverse edge storage.
            bucketRightsReadName:
                type: string
                description: The Name of the bucket for read right storage.
            bucketRightsWriteName:
                type: string
                description: The Name of the bucket for write right storage.
            bucketRightsAdminName:
                type: string
                description: The Name of the bucket for admin right storage.
            bucketRightsOwnerName:
                type: string
                description: The Name of the bucket for owner right storage.
            storageReadPolicyArn:
                type: string
                description: The ARN of the storage read policy.
            storageWritePolicyArn:
                type: string
                description: The ARN of the storage write policy.
        required:
            - bucketNodesName
            - bucketEdgesName
            - bucketReverseEdgesName
            - bucketRightsReadName
            - bucketRightsWriteName
            - bucketRightsAdminName
            - bucketRightsOwnerName
            - storageReadPolicyArn
            - storageWritePolicyArn
language:
    csharp:
        packageReferences:
            Pulumi: 3.*
            Pulumi.Aws: 4.*
    go:
        generateResourceContainerTypes: true
        importBasePath: github.com/gothub-team/got/packages/pulumi-gotiac-aws/sdk
    nodejs:
        packageName: '@gothub/pulumi-gotiac-aws'
        dependencies:
            '@pulumi/aws': '^6.0.0'
        devDependencies:
            typescript: '*'
            '@types/node': '*'
            '@gothub/typescript-util': 'workspace:*'
        trustedDependencies:
            - 'protobufjs'
    python:
        requires:
            pulumi: '>=3.0.0,<4.0.0'
            pulumi-aws: '>=4.0.0,<5.0.0'
